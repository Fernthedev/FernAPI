buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'


minecraft {
    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
  //  version = "1.8.9-11.15.1.2318-1.8.9"

    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
    runs {
        client = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
    }

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
   mappings = "stable_22"
    //mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    
    maven {
        name = 'placeholderapi'
        url = 'http://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    jcenter()
    maven { url "https://jitpack.io" }
}

group = 'com.github.fernthedev' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
def developer = "FernTheDev"
def MCVersion = "1.8.9"
archivesBaseName = "FernAPI"

dependencies {
    compileOnly 'com.google.code.gson:gson:2.6.2'
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.8.9-11.15.1.2318'
    compileOnly 'org.spigotmc:spigot-api:1.8-R0.1-SNAPSHOT'
    compileOnly 'net.md-5:bungeecord-api:1.8-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:+'
    compileOnly 'org.projectlombok:lombok:+'
    implementation 'com.github.jitpack:gradle-simple:1.0'
}





publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'com.github.fernthedev'
            artifactId = 'fernapi'
            version = '1.1'

        }
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

jar.dependsOn(shadowJar)

reobf {
    //noinspection GroovyMissingReturnStatement
    shadowJar {
        // Reobfuscate the shadowed JAR
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", "1.8.9"

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': "1.8.9"
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
    minimize()
}